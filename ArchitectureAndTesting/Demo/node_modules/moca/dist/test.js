"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const moca_1 = require("./moca");
function hello() {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise(function (complete, fail) {
            setTimeout(function () {
                console.log("     hello");
                complete();
            }, 1);
        });
    });
}
function world() {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise(function (complete, fail) {
            setTimeout(function () {
                console.log("     world");
                complete();
            }, 1);
        });
    });
}
moca_1.suite('Hello', () => {
    moca_1.test("hello", () => __awaiter(this, void 0, void 0, function* () {
        yield hello();
    }));
    moca_1.test("world", () => __awaiter(this, void 0, void 0, function* () {
        yield hello();
        yield world();
    }));
});
moca_1.suite('Hello1', () => {
    moca_1.setup(() => __awaiter(this, void 0, void 0, function* () { return console.log('setup ...'); }));
    moca_1.teardown(() => __awaiter(this, void 0, void 0, function* () { return console.log('teardown ...'); }));
    moca_1.test("hello1", () => __awaiter(this, void 0, void 0, function* () {
        console.log('a');
    }));
    moca_1.test("world1", () => __awaiter(this, void 0, void 0, function* () {
        console.log('b');
        throw new Error(',,,,,,,,,,,,,,');
    }));
});
moca_1.suite('Hello2', () => {
    moca_1.test("hello2", () => __awaiter(this, void 0, void 0, function* () {
        console.log('c');
        throw new Error('!!!!!!!!!!!!!!');
    }));
    moca_1.test("world2", () => __awaiter(this, void 0, void 0, function* () {
        console.log('d');
    }));
});

//# sourceMappingURL=test.js.map
