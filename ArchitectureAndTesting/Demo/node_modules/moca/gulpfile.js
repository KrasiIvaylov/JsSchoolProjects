var gulp = require('gulp')
var typescript = require('gulp-typescript')
var sourcemaps = require('gulp-sourcemaps')
var rimraf = require('rimraf')
var colors = require('colors')
var path = require('path')
var tsconfig = require('./tsconfig.json') 

const BASE_DIR = path.join(__dirname, 'src')
const DIST_DIR = 'dist'

function watch(sources, tasks) {
  function fill(val) {
    return val < 10 ? '0' + val : val.toString() 
  }
  gulp.watch(sources, {
    debounceDelay: 20,
    mode: 'auto',
    cwd: __dirname
  }).on('change', function (e) {
    var now = new Date()
    var time = fill(now.getHours())   + ':' + 
               fill(now.getMinutes()) + ':' + 
               fill(now.getSeconds())
    var pathname = path.relative(process.cwd(), e.path)
    console.log('[' + colors.gray(time) + '] ' + pathname + 
                ' ' + colors.yellow(e.type))
    gulp.start.apply(gulp, tasks)
  })
}

function compileMain(pathname) {
  return function () {
    return gulp
            .src(pathname, {
              base: BASE_DIR
            })
            .pipe(sourcemaps.init())
            .pipe(typescript(tsconfig.compilerOptions))
            .pipe(sourcemaps.write('.'))
            .pipe(gulp.dest('dist'))
  }
}

function clearDist(dirname) {
  return function () {
    rimraf.sync(path.join(DIST_DIR, dirname))
  }
}

gulp.task('main', compileMain('src/**/*.ts'))
gulp.task('watchfiles', function () {
  watch(['src/**/*.ts'], ['main'])
})
gulp.task('clear', clearDist('.'))
gulp.task('build', ['clear', 'main'])
gulp.task('watch', ['clear', 'main', 'watchfiles'])